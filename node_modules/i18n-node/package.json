{
  "name": "i18n-node",
  "description": "Super simple i18n library with express middleware and Mustache syntax",
  "version": "2.1.3",
  "author": {
    "name": "eTilbudsavis ApS",
    "email": "info@etilbudsavis.dk"
  },
  "homepage": "http://etilbudsavis.dk",
  "contributors": [
    {
      "name": "Morten Bo",
      "email": "morten@etilbudsavis.dk"
    }
  ],
  "dependencies": {
    "mustache": "0.8.1"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "0.8.0",
    "grunt-contrib-watch": "0.5.3"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/eTilbudsavis/i18n-node"
  },
  "keywords": [
    "express",
    "i18n",
    "app",
    "web"
  ],
  "readme": "# I18n node\n\nSuper simple i18n library with express middleware and Mustache syntax.\n\n## Installation\n\n\t$ npm install i18n-node\n\n## Features\n\n- Based on [Mustache](http://mustache.github.io/) syntax (full partials support)\n- Reads translations from file system\n- Simple\n- Automatically detects locale\n- Easy translation method\n- Post processors\n\n## Why\n\nWe wanted a simple i18n library built on top of the logic-less template syntax provided by [Mustache](http://mustache.github.io/). Most libraries use sprintf, which is awesome, but it requires a specific order of data, which isn't desirable in our case.\n\n## Locales\n\nAll locales must conform to the locale format `ll_CC`, where ll is a two-letter language code, and CC is a two-letter country code. For instance, en_US represents U.S. English.\n\n## Examples\n\nAn example of a locale file could be:\n\n```json\n{\n\t\"common:hello\": \"Hello {{name}}!\"\n}\n```\n\n```js\nvar I18n = require('i18n-node');\nvar i18n = new I18n({\n\tdirectory: __dirname + '/locales/'\n});\ni18n.t('en_US', 'common:hello', {\n\tname: 'guest'\n}); // => \"Hello guest!\"\n```\n\n### Using Middleware\n\n```js\nvar I18n = require('i18n-node');\nvar express = require('express');\nvar app = express();\nvar i18n = new I18n({\n\tdirectory: __dirname + '/locales/'\n});\n\napp.configure(function () {\n\tapp.use(i18n.middleware());\n\tapp.use(app.router);\n});\n\napp.get('/', function (req, res) {\n\tres.send(req.t('common:hello', {\n\t\tname: 'guest'\n\t}));\n});\n```\n\n## Future Stuff\n\n- Singular/plural support\n- Number formatting across locales taking imperial countries into account\n- Unit tests!\n\nHope you like it!\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/eTilbudsavis/i18n-node/issues"
  },
  "_id": "i18n-node@2.1.3",
  "dist": {
    "shasum": "e1db8bf05844beb73c8cd4b6e4753c5d0d8df85b"
  },
  "_from": "i18n-node@",
  "_resolved": "https://registry.npmjs.org/i18n-node/-/i18n-node-2.1.3.tgz"
}
